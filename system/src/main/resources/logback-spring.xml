<?xml version="1.0" encoding="UTF-8"?>
<!-- Reference Manual http://logback.qos.ch/manual/index.html -->
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration debug="false">
    <!-- 定义日志文件位置 -->
    <property name="logsDir" value="${log.file.path:-../logs}" />
    <!-- 定义应用名称 -->
    <property name="contextName" value="yadmin" />

    <!-- 控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
<!--        <encoder charset="UTF-8"> &lt;!&ndash; encoder 可以指定字符集，对于中文输出有意义 &ndash;&gt;-->
        <encoder> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
            <Pattern>
                %red(%d{yyyy-MM-dd HH:mm:ss}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable
<!--                %black(%contextName-) %red(%d{yyyy-MM-dd HH:mm:ss}) [%green(%t)] %highlight(%-5level) %boldMagenta(%logger{36}) - %gray(%msg%n)-->
            </Pattern>
        </encoder>
        <!--添加我们自定义的filter-->
        <filter class="com.zhou.eladmin.monitor.log.filter.LogFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 出错日志 appender  -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter"> <!-- 过滤器 -->
            <level>WARN</level>
        </filter>
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${logsDir}/${contextName}-error-%d{yyyy-MM-dd}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily 让每天产生一个日志文件，最多 60 个，自动回滚 -->
            <!-- log.dir 在maven profile里或者配置文件头部定义配置 -->
            <fileNamePattern>${logsDir}/${contextName}-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
<!--            <timeBasedFileNamingAndTriggeringPolicy>-->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %p %C{1.} [%t] %m%n</pattern>
        </encoder>
    </appender>

    <logger name="druid.sql" level="DEBUG"/>
    <logger name="io.lettuce.core.protocol" level="INFO"/>
    <logger name="io.lettuce.core" level="INFO"/>
    <logger name="org.springframework.web.SimpLogging" level="ERROR" />
<!--    <logger name="org.springframework.messaging.simp.broker" level="ERROR" />-->

    <!-- 输出到控制台和文件，可定义更多的 Appender -->
    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ERROR"/>
    </root>
    <!--错误日志-->
    <!--<logger name="${contextName}-error" level="INFO">-->
        <!--<appender-ref ref="ERROR"/>-->
    <!--</logger>-->

    <!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
    <!--<logger name="org.hibernate" level="WARN"/>-->
</configuration>